{"version":3,"sources":["components/TopNavBar.tsx","hooks/FlaskAPI.tsx","components/Blog.tsx","components/Article.tsx","components/ArticleSummary.tsx","components/AboutMe.tsx","components/ContactMe.tsx","components/ProjectsCarousel.tsx","components/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TopNavBar","SubMenu","useState","page","setPage","history","useHistory","onClick","e","console","log","push","key","selectedKeys","mode","Item","icon","HomeOutlined","FileOutlined","useGetHandler","isLoading","setLoading","hasError","setError","data","setData","handleRequest","requestConfig","axios","request","then","response","catch","finally","Title","useGlobalState","createGlobalState","entries","lastSearch","articlesRequest","method","url","CenterFlex","styled","div","EntryList","props","style","padding","paddingTop","background","length","map","entry","Thumbnail","img","Header","Footer","Sider","Content","Entry","width","src","thumbnailLink","slug","textAlign","level","title","type","timestamp","Blog","setEntries","shownError","setShownError","paramsSearch","location","search","params","queryString","parse","substr","message","error","size","q","color","ReactMarkdown","require","slugRequest","SplashContainer","RightFlex","ContentContainer","h5","MarkdownCodeBlock","this","language","value","React","PureComponent","defaultProps","Article","match","className","backgroundSize","backgroundImage","photoLink","direction","textShadow","subtitle","orientation","source","content","renderers","code","nextArticleSlug","offsetBottom","margin","backgroundColor","shape","RightOutlined","github","height","marginLeft","marginRight","href","githubLink","tags","marginBottom","split","tag","Layout","ArticleFlex","ArticleImage","position","top","left","ArticleSummary","Text","Paragraph","AboutMe","listStyle","maxWidth","borderRadius","border","display","ellipsis","rows","expandable","employmentStatus","Splash","h2","FinePrint","h4","Embedded","ContactMe","Display","ProjectsCarousel","autoplay","lazyLoad","autoplaySpeed","speed","TerminalDisplay","Live","setDisplay","TerminalContainer","TerminalTop","gifLink","alt","maxHeight","borderWidth","borderColor","lineHeight","GithubOutlined","fontSize","window","open","FileTextOutlined","Code","ArrowLeftOutlined","flexBasis","alignSelf","wordWrap","summary","overflow","articleEntries","projectEntries","TitleSplash","DownOutlined","Home","align","App","exact","path","component","Component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b4420e6.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport { Menu } from 'antd';\nimport { HomeOutlined, FileOutlined} from '@ant-design/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst { SubMenu } = Menu;\n\ninterface Props {}\n\nconst TopNavBar: React.FC<Props> = ({}) => {\n  const [page, setPage] = useState<string>(\"home\");\n  const history = useHistory()\n\n  function handleClick(e: { key: any; }) {\n    console.log('click ', e);\n    history.push(e.key)\n    setPage(e.key)\n  };\n\n  return (\n    <Menu onClick={handleClick} selectedKeys={[page]} mode=\"horizontal\">\n      <Menu.Item key=\"home\" icon={<HomeOutlined />}>\n        Home\n      </Menu.Item>\n      <Menu.Item key=\"blog\" icon={<FileOutlined />}>\n        Blog \n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default TopNavBar\n","// Send a POST request using axios config\n/*\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n*/\nimport axios from 'axios'\nimport { useState } from 'react';\n\n\n//const iAxios = axios.create({\n  //baseURL: 'https://localhost:3000',\n  //timeout: 1000,\n//});\n\n\nconst useGetHandler = () => {\n    const [isLoading, setLoading] = useState(false);\n    const [hasError, setError] = useState(false);\n    const [data, setData] = useState(null);\n\n    const handleRequest = (requestConfig: any) => {\n        setLoading(true);\n        setError(false);\n\n        return axios.request(requestConfig)\n            .then((response) => {console.log(response.data); setData(response.data)})\n            .catch((response) => {console.log(response); setError(response)})\n            .finally(() => setLoading(false))\n    };\n\n    return {isLoading, hasError, data, handleRequest};\n};\n\nexport default useGetHandler","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ArticleMeta } from '../data/ArticleMeta'\nimport { useHistory, RouteComponentProps } from 'react-router-dom';\nimport { createGlobalState } from 'react-hooks-global-state';\nimport useGetHandler from '../hooks/FlaskAPI'\nimport queryString from 'query-string'\nimport { Spin, message, Typography, Layout, Empty } from 'antd'\n\nconst { Title } = Typography\nconst initialState = { entries: null, lastSearch: '' }\nconst { useGlobalState } = createGlobalState(initialState)\n\nconst articlesRequest = {\n  method: 'get',\n  url: '/articles/',\n};\n\ninterface rquery {\n  id?: string\n}\n\nexport const Blog: React.FC<RouteComponentProps<rquery>> = (props: any) => {\n\n  const [entries, setEntries] = useGlobalState('entries');\n  const [lastSearch, setLastSearch] = useGlobalState('lastSearch');\n  const { data, isLoading, hasError, handleRequest } = useGetHandler();\n  const [shownError, setShownError] = useState(false)\n\n  let paramsSearch = props.location.search\n  const params = (paramsSearch.length !== 0) ?\n    queryString.parse(paramsSearch.substr(1))\n    :\n    {}\n \n  if (hasError) {\n    if (shownError == false) {\n      message.error(\"An error has occured, please reload the page\")\n      setShownError(true)\n    } \n    return <div>Error</div>\n  }\n\n  if (data !== entries) {\n    console.log(\"PARAMS\")\n    console.log(params)\n    console.log(\"DATA\")\n    console.log(data)\n    console.log(\"ENTRIES\")\n    console.log(entries)\n    setEntries(data)\n  }\n\n  if (isLoading) {\n    return (<Spin size='large' />)\n  }\n  else {\n    // Display without search query\n    if (!('q' in params)) {\n      if (lastSearch === \"\" && entries !== null) {\n        return (\n          <div>\n            <Header><h2 style={{ color:\"white\" }}>Latest Posts</h2></Header>\n            <Content><EntryList entries={entries as unknown as ArticleMeta[]} /></Content>\n            <Footer></Footer>\n          </div>\n        );\n      }\n      else {\n        handleRequest(articlesRequest)\n      }\n    }\n    // Display using search query\n    else if (params.q === lastSearch) {\n      return (\n        <div>\n          <Header><h1 style={{ color:\"white\"}}>Searched: ...</h1></Header>\n          <Content><EntryList entries={entries as unknown as ArticleMeta[]} /></Content>\n          <Footer></Footer>\n        </div>\n      )\n    }\n    else {\n      handleRequest(articlesRequest)\n    }\n  }\n\n  return (<div></div>)\n};\n\n\nconst CenterFlex = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst EntryList: React.FC<{\n  entries: ArticleMeta[]\n}> = (props) => {\n\n  return (\n    <div style={{ padding: \"10px\", paddingTop: \"30px\", background: \"#eee\" }}>\n      <CenterFlex>\n        {(props.entries.length) == 0 ?\n          < Empty />\n          :\n          <div>{props.entries.map((e) => <ul><Entry entry={e} /></ul>)}</div>\n        }\n      </CenterFlex>\n    </div>\n  )\n}\n\nconst Thumbnail = styled.img`\n  max-height: 150px;\n  width: auto;\n  border-radius: 50%;\n  background-size: cover;\n\n`\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst Entry: React.FC<{\n  entry: ArticleMeta\n}> = (props) => {\n  const history = useHistory()\n\n  const navToArticle = () => {\n    history.push(props.entry.slug)\n  }\n\n  return (\n\n    <div style={{ width: \"80vw\", background: \"#eee\" }}>\n      <Layout>\n        <Sider style={{ background: \"#eee\" }}>\n          <Thumbnail src={props.entry.thumbnailLink} />\n        </Sider>\n        <Layout>\n          <Header style={{ background: \"#eee\" }}>\n            <div onClick={navToArticle} style={{ textAlign: \"left\" }}><Title level={3} >{props.entry.title}</Title></div>\n          </Header>\n          <Footer style={{ background: \"#eee\" }}><div style={{ textAlign: \"left\" }}><Title level={4} type=\"secondary\">{props.entry.timestamp}</Title></div></Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\n//{props.entries.map(e => <Project entry={e} />)}\n\nexport default Blog;","// For Syntax Highlighting\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter/'\nimport style from 'react-syntax-highlighter/dist/esm/styles/hljs/a11y-dark'\n\nimport { RouteComponentProps } from 'react-router-dom';\nimport React, { } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport useGetHandler from '../hooks/FlaskAPI';\nimport { Spin, message, Typography, Divider, Affix, Button, Tag, Space} from 'antd'\nimport { RightOutlined } from \"@ant-design/icons\"\nimport { useHistory} from \"react-router-dom\";\n\nconst ReactMarkdown = require('react-markdown')\n\nconst { Title } = Typography\n\nconst slugRequest = {\n  method: 'get',\n  url: '',\n};\n\nconst SplashContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 20vw;\n  width: 100%;\n`\nconst LeftFlex = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n`\nconst RightFlex = styled.div`\n  display: flex;\n  justify-content: right;\n  align-items: center;\n`\n\nconst Timestamp = styled.h5`\n  margin: 10px 20px;\n  color: lightgray;\n`\n\nconst ContentContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  height: 100%;\n  width: 800px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`\n\n\nexport const Article: React.FC<RouteComponentProps<{ slug: string }>> = (props: any) => {\n  let slug = props.match.params.slug\n  const { data, isLoading, hasError, handleRequest } = useGetHandler();\n  const history = useHistory();\n\n  // BUG: Does not reload page when pressing back button\n  const openNextArticleSlug = () => {\n    slugRequest.url = \"/\" + data[0].nextArticleSlug + \"/\"\n    history.push(data[0].nextArticleSlug);\n    handleRequest(slugRequest);\n  }\n\n  if (hasError) {\n    message.error(\"An error has occured. Please reload\");\n\n    return (\n      <div>\n        <SplashContainer />\n        <Spin />\n      </div>\n    )\n  }\n\n  if (data === null && isLoading === false) {\n    slugRequest.url = \"/\" + slug + \"/\"\n    //console.log(slugRequest)\n    handleRequest(slugRequest)\n  }\n  \n\n  return (\n    (data === null || isLoading) ?\n      <div>\n        <SplashContainer>\n          <Spin />\n        </SplashContainer>\n      </div>\n      :\n      <div className=\"center-h-text\">\n        <SplashContainer style={{ backgroundSize: \"cover\", backgroundImage: \"url(\" + data[0].photoLink + \")\" }}>\n          <Space direction=\"vertical\">\n            <Title level={1} style={{ color: \"white\", textShadow: \"2px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000\" }}>\n              {data[0].title}</Title>\n            <Title level={3} style={{ color: \"white\", textShadow: \"2px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000\" }}>\n              {data[0].subtitle}</Title>\n          </Space>\n        </SplashContainer>\n        <Divider orientation=\"left\">{data[0].timestamp}</Divider>\n        <ContentContainer>\n          <ReactMarkdown source={data[0].content} renderers={{code: MarkdownCodeBlock}} />\n        </ContentContainer>\n        {\n          (data[0].nextArticleSlug !== \"\") ?\n            <RightFlex>\n              <Affix offsetBottom={15} style={{ margin: \"20px\" }}>\n                <Button onClick={(e) => openNextArticleSlug()} style={{backgroundColor:\"#eae8e9\"}}shape=\"round\" icon={<RightOutlined />} size=\"large\" >Continue</Button>\n              </Affix>\n            </RightFlex>\n            :\n            <div />\n        }\n        {\n          (data[0].github !== \"\") ?\n            <a style={{ backgroundImage: \"url(github.png)\", backgroundSize: \"cover\", width: \"150px\", height: \"150px\", marginLeft: \"10px\", marginRight: \"10px\" }} href={data[0].githubLink} />\n            :\n            <div />\n        }\n        {\n          (data[0].tags !== \"\") ?\n            <div style={{ marginBottom: \"15px\" }}>\n              <span style={{ marginRight: 8 }}>Tags:</span>\n              {data[0].tags.split(',').map((tag: string) => <Tag>{tag}</Tag>)}\n            </div>\n            :\n            <div />\n        }\n\n      </div>\n  )\n}\n\n\n// Markdown Sytnax Highlighting\n\nclass MarkdownCodeBlock extends React.PureComponent<{language, value}> {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string,\n  }\n\n  static defaultProps = {\n    language: null,\n  }\n\n  render() {\n    const { language, value } = this.props;\n\n    return (\n      <SyntaxHighlighter language={language} style={style}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\n\nexport default Article;","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ArticleMeta, ArticleDummy } from '../data/ArticleMeta'\nimport { Typography } from 'antd'\nimport { useHistory } from 'react-router-dom';\n\nconst { Title } = Typography;\n\n\nconst Layout = styled.div`\n  width: 90% auto;\n  margin: 0px auto ;\n  padding: 16px;\n  position: relative;\n  min-width:280;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst ArticleFlex = styled.div`\n  margin: 10px ;\n  flex-grow: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ArticleContainer = styled.div`\n  height: 200px;\n  width: 200px;\n\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ArticleImage = styled.img`\n  border-radius: 10%;\n  opacity: .7;\n  position: center;\n  size: cover;\n  mask-repeat: no-repeat;\n  border: 2px solid #ddd;\n  height: 200px;\n  width: 200px;\n  z-index: -1;\n  src: none;\n`\n\nconst ArticleSummary: React.FC<{\n  entries: ArticleDummy[]\n}> = (props) => {\n  return (\n    <div className=\"pattern-background\">\n      <h1 >Dive Into My Brain</h1>\n      <h5 style={{color:\"#9b9b9b\"}}>Articles that define my interests, reasoning strategies, and programming obsessions</h5>\n      <Layout>{props.entries.map(e => <Article entry={e} />)}</Layout>\n    </div>\n  );\n};\n\n//const images = require.context('../../public/images', true);\nconst Article: React.FC<{\n  entry: ArticleDummy\n}> = (props) => {\n\n  const history = useHistory();\n\n  const openArticleSlug = () => {\n    history.push(props.entry.slug)\n  }\n\n  console.log(props.entry.thumbnailLink)\n\n  return (\n    <ArticleFlex className=\"pattern-background\">\n      <div style={{position:\"relative\", textAlign:\"center\"}}>\n        <ArticleImage src={props.entry.thumbnailLink} onClick={(e) => openArticleSlug()} />\n        <Title level={3} style={{ position:\"absolute\", top:\"60px\", left:\"10px\", color: \"white\", marginBottom: \"0px\", textShadow: \"2px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000\" }}>\n          {props.entry.title}\n        </Title>\n      </div >\n    </ArticleFlex >\n  )\n}\n\n\nexport default ArticleSummary;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {Typography} from 'antd'\n\nconst {Title, Text, Paragraph} = Typography\n\nconst AboutMe: React.FC<{ \n  employmentStatus:string,\n  location:string,\n}> = (props) => {\n\n  return(\n    <div>\n      <ul style={{listStyle:\"none\"}}>\n        <li><Title level={2}>Who Am I?</Title></li>\n        <li><img src=\"headshot-about-me-crop.jpeg\" style={{maxWidth:\"800px\", marginBottom:\"15px\", borderRadius:\"2%\", border:\"1px solid\"}}/></li>\n        <li><div style={{display:\"block-inline\", textAlign:\"left\"}}>\n\n        <li><Paragraph ellipsis={{ rows:6, expandable: true}}>I'm a recent university graduate from SoCal with a major passion for new technology. I enjoy working with multi-faceted developers and continually strive to find beautiful solutions. I'm focused on finding full time employment within San Francisco and believie any engineering problem can be solved with the correct tooling. If you are interested in working with me then send me a message!</Paragraph></li>\n        <li><Text type=\"secondary\">Location: {props.location}</Text></li>\n        <li><Text type=\"secondary\">Employment Status: {props.employmentStatus}</Text></li>\n          \n        </div></li>\n      </ul>\n    </div>\n  )\n\n}\n\n\n\nexport default AboutMe","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Splash = styled.h2`\n  margin-bottom:0px;\n`\n\nconst FinePrint = styled.h4`\n  color: darkgrey;\n`\nconst Embedded = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ContactMe: React.FC<{}> = (props) => {\n  return (\n    <div>\n      <ul>\n          <Splash >I'm a Conneticut born,</Splash>\n          <Splash >California raised engineer.</Splash>\n      </ul>\n      <ul><FinePrint>Let's connect. I prefer Email and LinkedIn messages.</FinePrint></ul>\n      <ul>\n        <Embedded>\n          <a style={{ backgroundImage: \"url(github.png)\", backgroundSize: \"cover\", width: \"150px\", height: \"150px\", marginLeft: \"10px\", marginRight: \"15px\" }} href=\"https://github.com/bcopp\" />\n          <a style={{ backgroundImage: \"url(linkdln.png)\", backgroundSize: \"cover\", width: \"150px\", height: \"150px\", marginLeft: \"10px\", marginRight: \"15px\" }} href=\"https://www.linkedin.com/in/bcopp/\" />\n          <a style={{ backgroundImage: \"url(mail.png)\", backgroundSize: \"cover\", width: \"150px\", height: \"110px\", marginLeft: \"10px\", marginRight: \"15px\" }} href=\"mailto:brendancopp@gmail.com\" />\n        </Embedded>\n      </ul>\n    </div>\n  )\n}\n\nexport default ContactMe;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ArticleMeta, ProjectDummy } from '../data/ArticleMeta'\nimport { message, Layout, Space, Carousel, Card, Typography, Divider } from 'antd'\nimport { ArrowLeftOutlined, FileTextOutlined, GithubOutlined } from '@ant-design/icons'\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Title, Paragraph } = Typography;\n\nconst CenterFlex = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: url(cream-dust.png);\n`\n\nexport const ProjectsCarousel: React.FC<{\n  entries: ProjectDummy[]\n}> = (props: any) => {\n  return (\n    <CenterFlex>\n      <div style={{ width: \"800px\" }}>\n        <Carousel autoplay lazyLoad=\"ondemand\" autoplaySpeed={10000} speed={800} >\n\n          {props.entries.map((e) =>\n            <TerminalDisplay entry={e} />\n          )}\n        </Carousel>\n      </div>\n    </CenterFlex>\n  )\n}\n\nenum Display {\n  Live,\n  Code,\n}\n\nconst TerminalDisplay: React.FC<{\n  entry: ProjectDummy\n}> = (props: any) => {\n  const [display, setDisplay] = useState(Display.Live)\n\n  if (!('code' in props.entry)) {\n    message.error(\"Entry does not have code\")\n    return (<div>ERROR</div>)\n  }\n\n  const TerminalContainer = styled.div`\n    height: auto;\n    width: auto;\n    border: solid;\n    border-width: 2px;\n\n  `\n  const TerminalTop = styled.div`\n    height: 20px;\n    width: auto;\n    background-color: #2E3463;\n    color: #C0BEBF;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `\n\n  const openGithubLink = () =>{\n    window.open(props.entry.githubLink, \"_blank\")\n  }\n\n  return (\n    <CenterFlex>\n      <div>\n        <TerminalContainer>\n          <TerminalTop>Creator-79@pop-os</TerminalTop>\n          {display === Display.Live ?\n            <img src={props.entry.gifLink} alt=\"This will display an animated GIF\" style={{ maxWidth: \"100%\", maxHeight: \"100%\" }} />\n            :\n            <Code code={props.entry.code} />\n          }\n        </TerminalContainer>\n        <div style={{ border: \"solid\", borderWidth: \"1px\", borderColor: \"grey\", lineHeight: \"20px\", textAlign: \"right\", height: \"60px\", backgroundColor: \"white\" }}>\n          <GithubOutlined style={{ fontSize: \"40px\", margin: \"10px 10px\" }} onClick={(e) => openGithubLink()}/>\n          {(display === Display.Live) ?\n            <FileTextOutlined style={{ fontSize: \"40px\", margin: \"10px 10px\" }} onClick={(e) => setDisplay(Display.Code)} />\n            :\n            <ArrowLeftOutlined style={{ fontSize: \"40px\", margin: \"10px 10px\" }} onClick={(e) => setDisplay(Display.Live)} />\n          }\n        </div>\n        {/* Text Body */}\n        <div style={{ margin: \"20px\", flexBasis: \"100%\", alignSelf: \"flex-start\", wordWrap: \"break-word\" }}>\n          <Title level={2} style={{ textAlign: \"left\" }}>{props.entry.title}</Title>\n          <Paragraph ellipsis={{ rows: 7, expandable: true }} style={{ lineHeight: \"30px\", textAlign: \"left\" }}>{props.entry.summary}</Paragraph>\n        </div>\n        <div style={{ height: \"60px\" }} />\n      </div>\n    </CenterFlex>\n  )\n}\n\nconst Code: React.FC<{\n  code: string\n}> = (props: any) => {\n  return (<div style={{ overflow:\"auto\", height: \"500px\", width: \"800px\" }}>{props.code}</div>)\n}\n\n\nexport default ProjectsCarousel","//import ProjectSummary from \"./components/ProjectSummary\"\nimport React, { Component, useState } from 'react';\nimport ArticleSummary from \"./ArticleSummary\"\nimport AboutMe from \"./AboutMe\"\nimport ContactMe from \"./ContactMe\"\nimport { ArticleMeta, ArticleDummy, ProjectDummy } from '../data/ArticleMeta'\nimport { Space, Divider, Typography } from 'antd';\nimport { DownOutlined } from '@ant-design/icons'\n\nimport { ProjectsCarousel } from './ProjectsCarousel';\nconst { Title } = Typography\n\n\n\nconst articleEntries = [\n  { slug: \"beautiful-python-1\", title: \"Beautiful Python - Part 1\", thumbnailLink: \"van-diagram-thumb.png\" } as unknown as ArticleDummy,\n  { slug: \"beautiful-python-2\", title: \"Beautiful Python - Part 2\", thumbnailLink: \"recursion-thumb.png\" } as unknown as ArticleDummy,\n  { slug: \"five-best-terminal-plugins\", title: \"5 Greatest Terminal Plugins\", thumbnailLink: \"plugin-thumb.png\" } as unknown as ArticleDummy,\n  { slug: \"pyspread\", title: \"Spreadsheets with Functional Python\", thumbnailLink: \"higher-order-function-thumb.png\" } as unknown as ArticleDummy,\n]\n\nconst employmentStatus = \"actively seeking\"\nconst location = \"San Francisco\"\n\nconst projectEntries = [\n  { title: \"Optimal Gene Sequence Matching\", summary: \"This research project matches two gene-sequences and solves an optimization to find the least common operations to equate one to the other. Possible operations on the dna are (ADD, REMOVE, UPDATE) and the program itself uses a recursive backtracking technique. The code (hosted on github) contains an simple, optimized, and multi-processing solution\", code: \"this is my code\", gifLink: \"gene-sequence.gif\", githubLink: \"https://www.github.com/bcopp/gene-sequences/optimized\" } as unknown as ProjectDummy,\n  { title: \"BrendanCopp.com\", summary: \"This website was created over the course of two weeks using a react frontend and flask backend. It showcases some of my favorite projects and excursions into programmatic concepts. All of the components were written and styled by hand with the exclusion of the nav-bar, carousel (ant design) and markdown parsers.\", code: \"\", gifLink: \"this-website.gif\", githubLink: \"https://www.github.com/bcopp/bcopp-blog\" } as unknown as ProjectDummy,\n  { slug: \"beautiful-python-1\", title: \"Non Repeating Permutations\", summary: \"This project shows the pros and cons of algorithmic construction using functional and imperative paradigms. Considering a list of n arrays containing n elements we find the unique permutations of their elements. This problem is explored thoroughly in my article \\\"18 Beautiful Lines of Python\\\" where we discuss several different reasoning patterns and finish with a concise program leveraging a Lisp-like cons abstraction. The lesson learned here was that beauty is in the eye of the beholder.\", code: \"this is my code\", gifLink: \"permutations.gif\", githubLink: \"https://www.github.com/bcopp/permutations\" } as unknown as ProjectDummy,\n]\n\nconst Home: React.FC<{}> = (props: any) => {\n  return (\n    <div className=\"pattern-background\">\n      <Space direction=\"vertical\" align=\"center\">\n        <TitleSplash />\n        <div style={{ maxWidth: \"1000px\" }}>\n          <Divider />\n          <div ><h2>My Latest Projects</h2></div>\n          <ProjectsCarousel entries={projectEntries} />\n          <Divider />\n          <AboutMe employmentStatus={employmentStatus} location={location} />\n          <Divider />\n          <ArticleSummary entries={articleEntries} />\n          <Divider />\n          <ContactMe />\n        </div>\n      </Space>\n    </div>\n  )\n}\n\n// Remove down-arrows when scroll event occurs\nconst TitleSplash: React.FC<{}> = (props: any) => {\n\n  return (\n      <div className=\"parallax\" >\n        <div className=\"fadeInAndOut\" style={{ position: \"relative\", top: \"40%\", left: \"0%\", display: \"inline-block\" }}>\n          <DownOutlined style={{ color: \"antiquewhite\" }}></DownOutlined>\n        </div>\n        <h1 className=\"fade-in-title\" style={{ color: \"antiquewhite\", fontSize: \"3.5em\" }}>Brendan Copp</h1>\n        <div className=\"fadeInAndOut\" style={{ position: \"relative\", top: \"40%\", left: \"0%\", display: \"inline-block\" }}>\n          <DownOutlined style={{ color: \"antiquewhite\" }}></DownOutlined>\n        </div>\n      </div>\n\n  )\n}\n\nexport default Home","import React, { Component } from 'react';\nimport TopNavBar from \"./components/TopNavBar\"\nimport Blog from \"./components/Blog\"\nimport Article from \"./components/Article\"\nimport Home from \"./components/Home\"\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <TopNavBar />\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/blog\" component={Blog} />\n            <Route path=\"/:slug\" component={Article} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n//<ProjectSummary entries={projectEntries}/>\n\n{/*<Button type=\"primary\">Button</Button>*/ }\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}