{"ast":null,"code":"import \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/space/style/css\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/creator-76/bc/web/bcopp-blog/react-antd/src/components/Terminal.tsx\";\nimport React from 'react';\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = _Layout;\nexport const TerminalDisplay = props => {\n  return /*#__PURE__*/React.createElement(_Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, props.entries.map(e => {\n    /*#__PURE__*/\n    React.createElement(TerminalCard, {\n      entry: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nconst TerminalCard = props => {\n  return /*#__PURE__*/React.createElement(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Header\"), /*#__PURE__*/React.createElement(Sider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Sider\"), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Content\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Footer\"));\n};\n\nconst Terminal = props => {\n  if (!('code' in props.entry)) {\n    _message.error(\"Entry does not have code\");\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"ERROR\");\n  }\n};\n\nexport default TerminalDisplay;","map":{"version":3,"sources":["/home/creator-76/bc/web/bcopp-blog/react-antd/src/components/Terminal.tsx"],"names":["React","Header","Footer","Sider","Content","TerminalDisplay","props","entries","map","e","TerminalCard","Terminal","entry","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAKA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,WAAN;AAEA,OAAO,MAAMC,eAEX,GAAIC,KAAD,IAAgB;AACnB,sBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAmBC,CAAD,IAAO;AACxB;AAAA,wBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFA,CADH,CADF;AAOD,CAVM;;AAYP,MAAMC,YAEJ,GAAIJ,KAAD,IAAgB;AACnB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADF;AAUD,CAbD;;AAgBA,MAAMK,QAEJ,GAAIL,KAAD,IAAgB;AACnB,MAAI,EAAE,UAAUA,KAAK,CAACM,KAAlB,CAAJ,EAA8B;AAC5B,aAAQC,KAAR,CAAc,0BAAd;;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAR;AACD;AACF,CAPD;;AAUA,eAAeR,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { EntryTrunc } from '../data/Entry'\nimport { message, Layout, Space } from 'antd'\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport const TerminalDisplay: React.FC<{\n  entries: EntryTrunc[]\n}> = (props: any) => {\n  return (\n    <Space direction=\"vertical\">\n      {props.entries.map((e) => {\n        <TerminalCard entry={e} />\n      })}\n    </Space>\n  )\n}\n\nconst TerminalCard: React.FC<{\n  entry: EntryTrunc\n}> = (props: any) => {\n  return (\n    <Layout>\n      <Layout>\n        <Header>Header</Header>\n        <Sider>Sider</Sider>\n        <Content>Content</Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  )\n}\n\n\nconst Terminal: React.FC<{\n  entry: EntryTrunc\n}> = (props: any) => {\n  if (!('code' in props.entry)) {\n    message.error(\"Entry does not have code\")\n    return (<div>ERROR</div>)\n  }\n}\n\n\nexport default TerminalDisplay\n"]},"metadata":{},"sourceType":"module"}