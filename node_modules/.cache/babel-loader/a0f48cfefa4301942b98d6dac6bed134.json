{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/spin/style/css\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/creator-76/bc/web/bcopp-blog/react-antd/src/components/BlogMain.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { createGlobalState } from 'react-hooks-global-state';\nimport useGetHandler from '../hooks/FlaskAPI';\nimport queryString from 'query-string';\nconst initialState = {\n  entries: null,\n  lastSearch: ''\n};\nconst {\n  useGlobalState\n} = createGlobalState(initialState);\nconst articlesRequest = {\n  method: 'get',\n  url: 'articles/'\n};\n//const projectEntries = [\n//{title:\"hello1\", published:\"1/1/1\", summary:\"this is my summary\", resource:\"www.test\"} as EntryTrunc,\n//{title:\"hello2\", published:\"1/1/1\", summary:\"this is my summary\", resource:\"www.test\"} as EntryTrunc,\n//{title:\"hello3\", published:\"1/1/1\", summary:\"this is my summary\", resource:\"www.test\"} as EntryTrunc,\n//]\n//<ProjectSummary entries={projectEntries}/>\nexport const BlogMain = props => {\n  const renderEntries = entries => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, entries.map(e => /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Entry, {\n      entry: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }))));\n  };\n\n  const [entries, setEntries] = useGlobalState('entries');\n  const [lastSearch, setLastSearch] = useGlobalState('lastSearch');\n  const {\n    data,\n    isLoading,\n    hasError,\n    handleRequest\n  } = useGetHandler(); //console.log(JSON.stringify(props))\n\n  let paramsSearch = props.location.search;\n  const params = paramsSearch.length !== 0 ? queryString.parse(paramsSearch.substr(1)) : {};\n  console.log(params);\n\n  if (hasError) {\n    _message.error(\"An error has occured, please reload the page\");\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, \"Error\");\n  }\n\n  if (data !== entries) {\n    console.log(\"SET\");\n    setEntries(data);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(_Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    });\n  } else {\n    // Display without search query\n    if (!('q' in params)) {\n      if (lastSearch === \"\" && entries !== null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: '80%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, renderEntries(entries));\n      } else {\n        handleRequest(articlesRequest);\n      }\n    } // Display using search query\n    else if (params.q === lastSearch) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 14\n          }\n        }, \"Entries search=\", params);\n      } else {\n        handleRequest(articlesRequest);\n      }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  });\n}; //const Outer = styled.div `\n//display: flex;\n//justify-content: center;\n//align-items: center;\n//height: 100px;\n//`\n\nconst Thumbnail = styled.div`\n  height: auto;\n  width: 100px;\n  border-radius: 50%;\n\n`;\nconst EntryList = styled.div`\n  margin: \"20%\";\n`;\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = _Layout;\nexport const Entry = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, props.entry.title), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, props.entry.summary), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, props.entry.published))));\n}; //{props.entries.map(e => <Project entry={e} />)}\n\nexport default BlogMain;","map":{"version":3,"sources":["/home/creator-76/bc/web/bcopp-blog/react-antd/src/components/BlogMain.tsx"],"names":["React","styled","createGlobalState","useGetHandler","queryString","initialState","entries","lastSearch","useGlobalState","articlesRequest","method","url","BlogMain","props","renderEntries","map","e","setEntries","setLastSearch","data","isLoading","hasError","handleRequest","paramsSearch","location","search","params","length","parse","substr","console","log","error","width","q","Thumbnail","div","EntryList","Header","Footer","Sider","Content","Entry","background","entry","title","summary","published"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport EntryTrunc from '../data/Entry'\nimport { useParams, RouteComponentProps } from 'react-router-dom';\nimport { createGlobalState } from 'react-hooks-global-state';\nimport useGetHandler from '../hooks/FlaskAPI'\nimport ProjectSummary from './ProjectSummary'\nimport queryString from 'query-string'\nimport {Spin, message, Space, Layout} from 'antd'\n\n\nconst initialState = { entries: null, lastSearch: '' }\nconst { useGlobalState } = createGlobalState(initialState)\n\nconst articlesRequest = {\n  method: 'get',\n  url: 'articles/',\n};\n\ninterface rquery {\n  id?: string\n}\n\n//const projectEntries = [\n  //{title:\"hello1\", published:\"1/1/1\", summary:\"this is my summary\", resource:\"www.test\"} as EntryTrunc,\n  //{title:\"hello2\", published:\"1/1/1\", summary:\"this is my summary\", resource:\"www.test\"} as EntryTrunc,\n  //{title:\"hello3\", published:\"1/1/1\", summary:\"this is my summary\", resource:\"www.test\"} as EntryTrunc,\n//]\n                  //<ProjectSummary entries={projectEntries}/>\n\nexport const BlogMain: React.FC<RouteComponentProps<rquery>> = (props: any) => {\n  const renderEntries = (entries: EntryTrunc[]) => {\n    return (\n      <div>\n        {entries.map((e) => <ul><Entry entry={e}/></ul>)}\n      </div>\n    )\n  }\n\n  const [entries, setEntries] = useGlobalState('entries');\n  const [lastSearch, setLastSearch] = useGlobalState('lastSearch');\n  const { data, isLoading, hasError, handleRequest } = useGetHandler();\n\n  //console.log(JSON.stringify(props))\n  let paramsSearch = props.location.search\n  const params = (paramsSearch.length !== 0) ?\n    queryString.parse(paramsSearch.substr(1))\n  :\n    {}\n  console.log(params)\n\n  if (hasError) {\n    message.error(\"An error has occured, please reload the page\")\n    return <div>Error</div>\n  }\n\n  if (data !== entries) {\n    console.log(\"SET\")\n    setEntries(data)\n  }\n\n  if (isLoading) {\n    return (<Spin size='large'/>)\n  }\n  else {\n    // Display without search query\n    if (!('q' in params)) {\n      if (lastSearch === \"\" && entries !== null) {\n        return (\n          <div style={{width:'80%'}}>\n            {renderEntries(entries as unknown as EntryTrunc[])}\n          </div>\n        );\n      }\n      else {\n        handleRequest(articlesRequest)\n      }\n    }\n    // Display using search query\n    else if (params.q === lastSearch) {\n      return <div>Entries search={params}</div>\n    }\n    else {\n      handleRequest(articlesRequest)\n    }\n  }\n\n  return (<div></div>)\n};\n\n//const Outer = styled.div `\n  //display: flex;\n  //justify-content: center;\n  //align-items: center;\n  //height: 100px;\n\n//`\n\nconst Thumbnail = styled.div `\n  height: auto;\n  width: 100px;\n  border-radius: 50%;\n\n`\n\nconst EntryList = styled.div `\n  margin: \"20%\";\n`\n\nconst {Header, Footer, Sider, Content} = Layout;\n\nexport const Entry: React.FC<{\n  entry: EntryTrunc\n}> = (props) => {\n\n  return (\n    <div>\n      <Layout>\n        <Sider><div style={{background:\"green\"}}/></Sider>\n        <Layout>\n          <Header>{props.entry.title}</Header>\n          <Content>{props.entry.summary}</Content>\n          <Footer>{props.entry.published}</Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\n//{props.entries.map(e => <Project entry={e} />)}\n\nexport default BlogMain;"]},"metadata":{},"sourceType":"module"}