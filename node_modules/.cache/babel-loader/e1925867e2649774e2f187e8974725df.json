{"ast":null,"code":"!function (t, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? n(exports, require(\"react\")) : \"function\" == typeof define && define.amd ? define([\"exports\", \"react\"], n) : n((t = t || self).reactHooksGlobalState = {}, t.react);\n}(this, function (t, n) {\n  function e() {\n    return (e = Object.assign || function (t) {\n      for (var n = 1; n < arguments.length; n++) {\n        var e = arguments[n];\n\n        for (var r in e) {\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n        }\n      }\n\n      return t;\n    }).apply(this, arguments);\n  }\n\n  var r = function r(t, n) {\n    if (!t.includes(n)) throw new Error(\"'\" + n + \"' not found. It must be provided in initialState as a property key.\");\n  },\n      o = \"production\" !== process.env.NODE_ENV ? Symbol(\"UPDATE_STATE\") : Symbol(),\n      u = function u(t, _u) {\n    var i = Object.keys(_u),\n        c = _u,\n        f = null,\n        a = {};\n    i.forEach(function (t) {\n      a[t] = new Set();\n    });\n\n    var s = function s(n, e) {\n      return e.type === o ? e.r ? e.r(n) : e.e : t(n, e);\n    },\n        l = function l(t, n) {\n      \"production\" !== process.env.NODE_ENV && r(i, t);\n\n      var u = function u(r) {\n        var o, u;\n        return e({}, r, ((o = {})[t] = \"function\" == typeof (u = n) ? u(r[t]) : u, o));\n      };\n\n      if (f) {\n        var s;\n        f(((s = {\n          type: o\n        }).r = u, s));\n      } else {\n        var l = (c = u(c))[t];\n        a[t].forEach(function (t) {\n          return t(l);\n        });\n      }\n    },\n        d = function d(t, n) {\n      i.forEach(function (e) {\n        var r = n[e];\n        t[e] !== r && a[e].forEach(function (t) {\n          return t(r);\n        });\n      });\n    };\n\n    return {\n      useGlobalStateProvider: function useGlobalStateProvider() {\n        var t = n.useReducer(s, c),\n            e = t[0],\n            r = t[1];\n        n.useEffect(function () {\n          var t;\n          if (f) throw new Error(\"Only one global state provider is allowed\");\n          return f = r, r(((t = {\n            type: o\n          }).e = c, t)), function () {\n            f = null;\n          };\n        }, []);\n        var u = n.useRef(e);\n        d(u.current, e), u.current = e, n.useEffect(function () {\n          c = e;\n        }, [e]);\n      },\n      useGlobalState: function useGlobalState(t) {\n        \"production\" !== process.env.NODE_ENV && r(i, t);\n        var e = n.useState(c[t]),\n            o = e[0],\n            u = e[1];\n        return n.useEffect(function () {\n          return a[t].add(u), u(c[t]), function () {\n            a[t].delete(u);\n          };\n        }, [t]), [o, n.useCallback(function (n) {\n          return l(t, n);\n        }, [t])];\n      },\n      getGlobalState: function getGlobalState(t) {\n        return \"production\" !== process.env.NODE_ENV && r(i, t), c[t];\n      },\n      setGlobalState: l,\n      getState: function getState() {\n        return c;\n      },\n      setState: function setState(t) {\n        var n;\n        f ? f(((n = {\n          type: o\n        }).e = t, n)) : d(c, c = t);\n      },\n      dispatch: function dispatch(n) {\n        if (f) f(n);else {\n          var e = c;\n          c = t(c, n), d(e, c);\n        }\n        return n;\n      }\n    };\n  };\n\n  t.createGlobalState = function (t) {\n    return u(function (t, n) {\n      return t;\n    }, t);\n  }, t.createStore = function t(n, e, r) {\n    return void 0 === e && (e = n(void 0, {\n      type: void 0\n    })), r ? r(t)(n, e) : u(n, e);\n  }, t.reduxDevToolsExt = function () {\n    return window.__REDUX_DEVTOOLS_EXTENSION__ ? function () {\n      for (var t = arguments.length, n = new Array(t), e = 0; e < t; e++) {\n        n[e] = arguments[e];\n      }\n\n      return n.reduce(function (t, n) {\n        return function () {\n          return t(n.apply(void 0, arguments));\n        };\n      });\n    }(function (r) {\n      return function (o, u, i) {\n        if (t = o, n = u, i) return i(r)(o, u);\n        var c = r(o, u);\n        return e({}, c, {\n          useGlobalState: function useGlobalState(t) {\n            return [c.useGlobalState(t)[0], function () {\n              throw new Error(\"Update is not allowed when using DevTools\");\n            }];\n          }\n        });\n      };\n    }, window.__REDUX_DEVTOOLS_EXTENSION__(), function (r) {\n      return function (o, u, i) {\n        if (i) return i(r)(o, u);\n        var c = r(t, n),\n            f = e({}, o(u, {\n          type: \"@@redux/INIT\"\n        }), {}, n),\n            a = [];\n        return e({}, c, {\n          getState: function getState() {\n            return f;\n          },\n          dispatch: function dispatch(t) {\n            return f = o(f, t), c.setState(f.computedStates[f.currentStateIndex].state), a.forEach(function (t) {\n              return t();\n            }), t;\n          },\n          subscribe: function subscribe(t) {\n            return a.push(t), function () {\n              var n = a.indexOf(t);\n              a.splice(n, 1);\n            };\n          }\n        });\n      };\n    }) : function (t) {\n      return t;\n    };\n    var t, n;\n  };\n});","map":{"version":3,"sources":["../src/createContainer.ts","../src/createGlobalState.ts","../src/createStore.ts","../src/devtools.ts"],"names":["newValue","validateStateKey","keys","stateKey","includes","Error","UPDATE_STATE","process","env","NODE_ENV","Symbol","createContainer","reducer","initialState","Object","globalState","linkedDispatch","listeners","forEach","key","Set","patchedReducer","state","action","type","setGlobalState","update","updater","previousState","nextPartialState","listener","notifyListeners","prevState","nextState","dispatch","useReducer","useEffect","prevGlobalState","useRef","current","partialState","setPartialState","useState","add","useCallback","u","nextGlobalState","useGlobalStateProvider","useGlobalState","getGlobalState","getState","setState","_action","createStore","undefined","enhancer","fns","reduce","p","c","savedReducer","savedInitialState","store","devState","computedStates","currentStateIndex","f","push","index","indexOf","splice","subscribe","window","__REDUX_DEVTOOLS_EXTENSION__","compose"],"mappings":"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","sourcesContent":["import {\n  Dispatch,\n  Reducer,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\n// utility functions\n\nconst isFunction = (fn: unknown): fn is Function => (typeof fn === 'function');\n\nconst updateValue = <Value>(oldValue: Value, newValue: SetStateAction<Value>) => {\n  if (isFunction(newValue)) {\n    return newValue(oldValue);\n  }\n  return newValue;\n};\n\nconst validateStateKey = (keys: string[], stateKey: string) => {\n  if (!keys.includes(stateKey)) {\n    throw new Error(`'${stateKey}' not found. It must be provided in initialState as a property key.`);\n  }\n};\n\n// constants\n\nconst UPDATE_STATE = (\n  process.env.NODE_ENV !== 'production' ? Symbol('UPDATE_STATE')\n  /* for production */ : Symbol()\n);\n\nconst PROP_UPDATER = 'r';\nconst PROP_STATE = 'e';\n\n// createContainer\n\nexport const createContainer = <State, Action>(\n  reducer: Reducer<State, Action>,\n  initialState: State,\n) => {\n  type StateKeys = keyof State;\n  const keys = Object.keys(initialState);\n\n  let globalState = initialState;\n\n  type PA1 = { type: typeof UPDATE_STATE; [PROP_UPDATER]: (prev: State) => State };\n  type PA2 = { type: typeof UPDATE_STATE; [PROP_STATE]: State };\n  type PatchAction = PA1 | PA2;\n  let linkedDispatch: Dispatch<Action | PatchAction> | null = null;\n\n  const listeners = {} as {\n    [StateKey in StateKeys]: Set<Dispatch<SetStateAction<State[StateKey]>>>;\n  };\n  keys.forEach((key) => { listeners[key as StateKeys] = new Set(); });\n\n  const patchedReducer = (state: State, action: Action | PatchAction) => {\n    // how can it be typed more properly?\n    if ((action as { type: unknown }).type === UPDATE_STATE) {\n      return (action as { [PROP_UPDATER]: unknown })[PROP_UPDATER]\n        ? (action as PA1)[PROP_UPDATER](state)\n        : (action as PA2)[PROP_STATE];\n    }\n    return reducer(state, action as Action);\n  };\n\n  const setGlobalState = <StateKey extends StateKeys>(\n    stateKey: StateKey,\n    update: SetStateAction<State[StateKey]>,\n  ) => {\n    if (process.env.NODE_ENV !== 'production') {\n      validateStateKey(keys, stateKey as string);\n    }\n    const updater = (previousState: State): State => ({\n      ...previousState,\n      [stateKey]: updateValue(previousState[stateKey], update),\n    });\n    if (linkedDispatch) {\n      linkedDispatch({ type: UPDATE_STATE, [PROP_UPDATER]: updater });\n    } else {\n      globalState = updater(globalState);\n      const nextPartialState = globalState[stateKey];\n      listeners[stateKey].forEach((listener) => listener(nextPartialState));\n    }\n  };\n\n  const notifyListeners = (prevState: State, nextState: State) => {\n    keys.forEach((key) => {\n      const nextPartialState = nextState[key as StateKeys];\n      if (prevState[key as StateKeys] !== nextPartialState) {\n        listeners[key as StateKeys].forEach((listener) => listener(nextPartialState));\n      }\n    });\n  };\n\n  const useGlobalStateProvider = () => {\n    const [state, dispatch] = useReducer(patchedReducer, globalState);\n    useEffect(() => {\n      if (linkedDispatch) throw new Error('Only one global state provider is allowed');\n      linkedDispatch = dispatch;\n      // in case it's changed before this effect is handled\n      dispatch({ type: UPDATE_STATE, [PROP_STATE]: globalState });\n      const cleanup = () => {\n        linkedDispatch = null;\n      };\n      return cleanup;\n    }, []);\n    const prevGlobalState = useRef(state);\n    notifyListeners(prevGlobalState.current, state);\n    prevGlobalState.current = state;\n    useEffect(() => {\n      globalState = state;\n    }, [state]);\n  };\n\n  const useGlobalState = <StateKey extends StateKeys>(stateKey: StateKey) => {\n    if (process.env.NODE_ENV !== 'production') {\n      validateStateKey(keys, stateKey as string);\n    }\n    const [partialState, setPartialState] = useState(globalState[stateKey]);\n    useEffect(() => {\n      listeners[stateKey].add(setPartialState);\n      setPartialState(globalState[stateKey]); // in case it's changed before this effect is handled\n      const cleanup = () => {\n        listeners[stateKey].delete(setPartialState);\n      };\n      return cleanup;\n    }, [stateKey]);\n    const updater = useCallback(\n      (u: SetStateAction<State[StateKey]>) => setGlobalState(stateKey, u),\n      [stateKey],\n    );\n    return [partialState, updater] as const;\n  };\n\n  const getGlobalState = <StateKey extends StateKeys>(stateKey: StateKey) => {\n    if (process.env.NODE_ENV !== 'production') {\n      validateStateKey(keys, stateKey as string);\n    }\n    return globalState[stateKey];\n  };\n\n  const getWholeState = () => globalState;\n\n  const setWholeState = (nextGlobalState: State) => {\n    if (linkedDispatch) {\n      linkedDispatch({ type: UPDATE_STATE, [PROP_STATE]: nextGlobalState });\n    } else {\n      const prevGlobalState = globalState;\n      globalState = nextGlobalState;\n      notifyListeners(prevGlobalState, globalState);\n    }\n  };\n\n  const dispatchAction = (action: Action) => {\n    if (linkedDispatch) {\n      linkedDispatch(action);\n    } else {\n      const prevGlobalState = globalState;\n      globalState = reducer(globalState, action);\n      notifyListeners(prevGlobalState, globalState);\n    }\n    return action;\n  };\n\n  return {\n    useGlobalStateProvider,\n    useGlobalState,\n    getGlobalState,\n    setGlobalState,\n    getState: getWholeState,\n    setState: setWholeState, // for devtools.js\n    dispatch: dispatchAction,\n  };\n};\n","import { createContainer } from './createContainer';\n\ntype ExportFields =\n  | 'useGlobalStateProvider'\n  | 'useGlobalState'\n  | 'getGlobalState'\n  | 'setGlobalState';\n\n/**\n * create a gloal state\n *\n * It returns a set of functions\n * - `useGlobalState`: a custom hook works like React.useState\n * - `getGlobalState`: a function to get a global state by key outside React\n * - `setGlobalState`: a function to set a global state by key outside React\n *\n * @example\n * import { createGlobalState } from 'react-hooks-global-state';\n *\n * const { useGlobalState } = createGlobalState({ count: 0 });\n *\n * const Component = () => {\n *   const [count, setCount] = useGlobalState('count');\n *   ...\n * };\n */\nexport const createGlobalState = <State>(initialState: State) => {\n  const store = createContainer((state: State, _action: never) => state, initialState);\n  return store as Pick<typeof store, ExportFields>;\n};\n","import { Reducer } from 'react';\n\nimport { createContainer } from './createContainer';\n\ntype Enhancer<Creator> = (creator: Creator) => Creator;\n\ntype ExportFields =\n  | 'useGlobalStateProvider'\n  | 'useGlobalState'\n  | 'getState'\n  | 'dispatch';\n\n/**\n * create a global store\n *\n * In additon to `useGlobaState` which is the same hook as in createGlobalState,\n * a store has `getState` and `dispatch`.\n * A store works somewhat similarly to Redux, but not the same.\n *\n * @example\n * import { createStore } from 'react-hooks-global-state';\n *\n * const initialState = { count: 0 };\n * const reducer = ...;\n *\n * const store = createStore(reducer, initialState);\n * const { useGlobalState } = store;\n *\n * const Component = () => {\n *   const [count, setCount] = useGlobalState('count');\n *   ...\n * };\n */\nexport const createStore = <State, Action>(\n  reducer: Reducer<State, Action>,\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  initialState: State = (reducer as any)(undefined, { type: undefined }),\n  enhancer?: Enhancer<any>,\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n) => {\n  if (enhancer) return enhancer(createStore)(reducer, initialState) as never;\n  const store = createContainer(reducer, initialState);\n  return store as Pick<typeof store, ExportFields>;\n};\n","/* eslint @typescript-eslint/no-explicit-any: off */\n\nconst compose = (...fns: any[]) => fns.reduce((p, c) => (...args: any[]) => p(c(...args)));\n\nconst initAction = () => ({ type: '@@redux/INIT' });\n\nconst createEnhancers = () => {\n  let savedReducer: any;\n  let savedInitialState: any;\n  const before = (createStore: any) => (reducer: any, initialState: any, enhancer: any) => {\n    savedReducer = reducer;\n    savedInitialState = initialState;\n    if (enhancer) return enhancer(createStore)(reducer, initialState);\n    const store = createStore(reducer, initialState);\n    return {\n      ...store,\n      useGlobalState: (stateKey: any) => {\n        const [value] = store.useGlobalState(stateKey);\n        const MESG = 'Update is not allowed when using DevTools';\n        return [value, () => { throw new Error(MESG); }];\n      },\n    };\n  };\n  const after = (createStore: any) => (reducer: any, initialState: any, enhancer: any) => {\n    if (enhancer) return enhancer(createStore)(reducer, initialState);\n    const store = createStore(savedReducer, savedInitialState);\n    let devState = {\n      ...reducer(initialState, initAction()),\n      ...savedInitialState,\n    };\n    const getState = () => devState;\n    const listeners: any = [];\n    const dispatch = (action: any) => {\n      devState = reducer(devState, action);\n      store.setState(devState.computedStates[devState.currentStateIndex].state);\n      listeners.forEach((f: any) => f());\n      return action;\n    };\n    const subscribe = (listener: any) => {\n      listeners.push(listener);\n      const unsubscribe = () => {\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n      return unsubscribe;\n    };\n    return {\n      ...store,\n      getState,\n      dispatch,\n      subscribe,\n    };\n  };\n  return { before, after };\n};\n\nexport const reduxDevToolsExt = () => {\n  if (!(window as any).__REDUX_DEVTOOLS_EXTENSION__) return (f: any) => f;\n  const { before, after } = createEnhancers();\n  return compose(\n    before,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\n    after,\n  );\n};\n"]},"metadata":{},"sourceType":"script"}