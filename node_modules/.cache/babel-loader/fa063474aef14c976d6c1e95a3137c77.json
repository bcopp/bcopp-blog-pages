{"ast":null,"code":"var _jsxFileName = \"/home/creator-76/bc/web/bcopp-blog/react-antd/src/components/BlogMain.tsx\";\nimport React from 'react';\nimport { createGlobalState } from 'react-hooks-global-state';\nimport useGetHandler from '../hooks/FlaskAPI';\nimport queryString from 'query-string';\nconst initialState = {\n  entries: null,\n  lastSearch: ''\n};\nconst {\n  useGlobalState\n} = createGlobalState(initialState);\nconst articlesRequest = {\n  method: 'get',\n  url: 'articles/'\n};\nexport const BlogMain = props => {\n  const [entries, setEntries] = useGlobalState('entries');\n  const [lastSearch, setLastSearch] = useGlobalState('lastSearch');\n  const {\n    data,\n    isLoading,\n    hasError,\n    handleRequest\n  } = useGetHandler();\n  let paramsID = props.match.params.id;\n  console.log(paramsID);\n  let params = queryString.parse(paramsID);\n  console.log(\"Load\");\n  console.log(params);\n\n  if (hasError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"Error\");\n  }\n\n  if (JSON.stringify(data) !== JSON.stringify(entries)) {\n    setEntries(data);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    // Display without search query\n    if (params == undefined || !('q' in params)) {\n      if (lastSearch === \"\" && entries !== null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }\n        }, \"Entries (all)\");\n      } else {\n        handleRequest(articlesRequest);\n      }\n    } // Display using search query\n    else if (params.q === lastSearch) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 12\n          }\n        }, \"Entries search=\", params);\n      } else {\n        handleRequest(articlesRequest);\n      }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  });\n}; //{props.entries.map(e => <Project entry={e} />)}\n\nexport default BlogMain;","map":{"version":3,"sources":["/home/creator-76/bc/web/bcopp-blog/react-antd/src/components/BlogMain.tsx"],"names":["React","createGlobalState","useGetHandler","queryString","initialState","entries","lastSearch","useGlobalState","articlesRequest","method","url","BlogMain","props","setEntries","setLastSearch","data","isLoading","hasError","handleRequest","paramsID","match","params","id","console","log","parse","JSON","stringify","undefined","q"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAIA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAArB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAqBN,iBAAiB,CAACG,YAAD,CAA5C;AAEA,MAAMI,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE,KADc;AAEtBC,EAAAA,GAAG,EAAE;AAFiB,CAAxB;AASA,OAAO,MAAMC,QAA+C,GAAIC,KAAD,IAAgB;AAC7E,QAAM,CAACP,OAAD,EAAUQ,UAAV,IAAwBN,cAAc,CAAC,SAAD,CAA5C;AACA,QAAM,CAACD,UAAD,EAAaQ,aAAb,IAA8BP,cAAc,CAAC,YAAD,CAAlD;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA+ChB,aAAa,EAAlE;AAIA,MAAIiB,QAAQ,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,MAAIE,MAAM,GAAGlB,WAAW,CAACsB,KAAZ,CAAkBN,QAAlB,CAAb;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,MAAIJ,QAAJ,EAAc;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAED,MAAIS,IAAI,CAACC,SAAL,CAAeZ,IAAf,MAAyBW,IAAI,CAACC,SAAL,CAAetB,OAAf,CAA7B,EAAqD;AACnDQ,IAAAA,UAAU,CAACE,IAAD,CAAV;AACD;;AAED,MAAIC,SAAJ,EAAc;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFD,MAGI;AACF;AACA,QAAKK,MAAM,IAAIO,SAAV,IAAuB,EAAE,OAAOP,MAAT,CAA5B,EAA+C;AAC7C,UAAIf,UAAU,KAAK,EAAf,IAAqBD,OAAO,KAAK,IAArC,EAA2C;AACzC,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD,OAFD,MAGK;AACHa,QAAAA,aAAa,CAACV,eAAD,CAAb;AACD;AACF,KAPD,CAQA;AARA,SASK,IAAIa,MAAM,CAACQ,CAAP,KAAavB,UAAjB,EAA6B;AAClC,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAqBe,MAArB,CAAP;AACC,OAFI,MAGA;AACHH,QAAAA,aAAa,CAACV,eAAD,CAAb;AACD;AACF;;AAED,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD,CA7CM,C,CA+CP;;AAEA,eAAeG,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport EntryTrunc from '../data/Entry'\nimport { useParams, RouteComponentProps } from 'react-router-dom';\nimport { createGlobalState } from 'react-hooks-global-state';\nimport useGetHandler from '../hooks/FlaskAPI'\nimport queryString from 'query-string'\n\nconst initialState = { entries: null, lastSearch: '' }\nconst { useGlobalState } = createGlobalState(initialState)\n\nconst articlesRequest = {\n  method: 'get',\n  url: 'articles/',\n};\n\ninterface rquery {\n  id?: string\n}\n\nexport const BlogMain: React.FC<RouteComponentProps<rquery>> = (props: any) => {\n  const [entries, setEntries] = useGlobalState('entries');\n  const [lastSearch, setLastSearch] = useGlobalState('lastSearch');\n  const { data, isLoading, hasError, handleRequest } = useGetHandler();\n\n\n\n  let paramsID = props.match.params.id\n  console.log(paramsID)\n  let params = queryString.parse(paramsID)\n\n  console.log(\"Load\")\n  console.log(params)\n\n  if (hasError) {\n    return <div>Error</div>\n  }\n\n  if (JSON.stringify(data) !== JSON.stringify(entries)){\n    setEntries(data)\n  }\n\n  if (isLoading){\n    return <div>Loading...</div>\n  }\n  else{\n    // Display without search query\n    if ( params == undefined || !('q' in params) ) { \n      if (lastSearch === \"\" && entries !== null) {\n        return <div>Entries (all)</div>\n      }\n      else {\n        handleRequest(articlesRequest)\n      }\n    }\n    // Display using search query\n    else if (params.q === lastSearch) {\n    return <div>Entries search={params}</div>\n    }\n    else {\n      handleRequest(articlesRequest)\n    }\n  }\n\n  return (<div></div>)\n};\n\n//{props.entries.map(e => <Project entry={e} />)}\n\nexport default BlogMain;"]},"metadata":{},"sourceType":"module"}